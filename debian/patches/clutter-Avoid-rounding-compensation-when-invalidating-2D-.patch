From: Carlos Garnacho <carlosg@gnome.org>
Date: Fri, 5 May 2017 14:15:30 +0200
Subject: clutter: Avoid rounding compensation when invalidating 2D actors

This allows the redraw clip to be more constrained, so MetaCullable doesn't
end up rendering portions of window shadows, frame and background when a
window invalidates (part of) its contents.

https://bugzilla.gnome.org/show_bug.cgi?id=782344

Origin: https://gitlab.gnome.org/GNOME/mutter/commit/a7df459416d
Bug-Ubuntu: https://launchpad.net/bugs/1767648
Bug-GNOME: https://bugzilla.gnome.org/show_bug.cgi?id=782344
Applied-Upstream: 3.30.3
---
 clutter/clutter/clutter-paint-volume.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/clutter/clutter/clutter-paint-volume.c b/clutter/clutter/clutter-paint-volume.c
index b48f7f9..f340513 100644
--- a/clutter/clutter/clutter-paint-volume.c
+++ b/clutter/clutter/clutter-paint-volume.c
@@ -1166,6 +1166,21 @@ _clutter_paint_volume_get_stage_paint_box (ClutterPaintVolume *pv,
 
   _clutter_paint_volume_get_bounding_box (&projected_pv, box);
 
+  if (pv->is_2d && pv->actor &&
+      clutter_actor_get_z_position (pv->actor) == 0)
+    {
+      /* If the volume/actor are perfectly 2D, take the bounding box as
+       * good. We won't need to add any extra room for sub-pixel positioning
+       * in this case.
+       */
+      clutter_paint_volume_free (&projected_pv);
+      box->x1 = CLUTTER_NEARBYINT (box->x1);
+      box->y1 = CLUTTER_NEARBYINT (box->y1);
+      box->x2 = CLUTTER_NEARBYINT (box->x2);
+      box->y2 = CLUTTER_NEARBYINT (box->y2);
+      return;
+    }
+
   /* The aim here is that for a given rectangle defined with floating point
    * coordinates we want to determine a stable quantized size in pixels
    * that doesn't vary due to the original box's sub-pixel position.
