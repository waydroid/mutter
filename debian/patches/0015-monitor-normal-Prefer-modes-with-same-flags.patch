From c0dc66e8c0dfc6ab02506343dc8418891159657c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20=C3=85dahl?= <jadahl@gmail.com>
Date: Wed, 18 Oct 2017 23:22:01 +0800
Subject: [PATCH 15/18] monitor/normal: Prefer modes with same flags as
 preferred mode

When generating MetaMonitorMode's, prefer CRTC modes that has the same
set of flags as the preferred mode. This not only is probably a better
set of configurable modes, but it'll guarantee that the preferred mode
is added.

This fixes a crash when the preferred mode was not the first mode with
the same resolution, refresh rate and set of handled modes.

https://bugzilla.gnome.org/show_bug.cgi?id=789153
---
 src/backends/meta-monitor.c | 41 ++++++++++++++++++++++++++++++++---------
 1 file changed, 32 insertions(+), 9 deletions(-)

diff --git a/src/backends/meta-monitor.c b/src/backends/meta-monitor.c
index 8ca6ea859..2d06a1e36 100644
--- a/src/backends/meta-monitor.c
+++ b/src/backends/meta-monitor.c
@@ -394,16 +394,22 @@ generate_mode_id (MetaMonitorModeSpec *monitor_mode_spec)
 
 static gboolean
 meta_monitor_add_mode (MetaMonitor     *monitor,
-                       MetaMonitorMode *monitor_mode)
+                       MetaMonitorMode *monitor_mode,
+                       gboolean         replace)
 {
   MetaMonitorPrivate *priv = meta_monitor_get_instance_private (monitor);
+  MetaMonitorMode *existing_mode;
 
-  if (g_hash_table_lookup (priv->mode_ids,
-                           meta_monitor_mode_get_id (monitor_mode)))
+  existing_mode = g_hash_table_lookup (priv->mode_ids,
+                                       meta_monitor_mode_get_id (monitor_mode));
+  if (existing_mode && !replace)
     return FALSE;
 
+  if (existing_mode)
+    priv->modes = g_list_remove (priv->modes, existing_mode);
+
   priv->modes = g_list_append (priv->modes, monitor_mode);
-  g_hash_table_insert (priv->mode_ids, monitor_mode->id, monitor_mode);
+  g_hash_table_replace (priv->mode_ids, monitor_mode->id, monitor_mode);
 
   return TRUE;
 }
@@ -415,13 +421,17 @@ meta_monitor_normal_generate_modes (MetaMonitorNormal *monitor_normal)
   MetaMonitorPrivate *monitor_priv =
     meta_monitor_get_instance_private (monitor);
   MetaOutput *output;
+  MetaCrtcModeFlag preferred_mode_flags;
   unsigned int i;
 
   output = meta_monitor_get_main_output (monitor);
+  preferred_mode_flags = output->preferred_mode->flags;
+
   for (i = 0; i < output->n_modes; i++)
     {
       MetaCrtcMode *crtc_mode = output->modes[i];
       MetaMonitorMode *mode;
+      gboolean replace;
 
       mode = g_new0 (MetaMonitorMode, 1);
       mode->spec = (MetaMonitorModeSpec) {
@@ -437,13 +447,26 @@ meta_monitor_normal_generate_modes (MetaMonitorNormal *monitor_normal)
         .crtc_mode = crtc_mode
       };
 
+      /*
+       * We don't distinguish between all available mode flags, just the ones
+       * that are configurable. We still need to pick some mode though, so
+       * prefer ones that has the same set of flags as the preferred mode;
+       * otherwise take the first one in the list. This guarantees that the
+       * preferred mode is always added.
+       */
+      replace = crtc_mode->flags == preferred_mode_flags;
+
+      if (!meta_monitor_add_mode (monitor, mode, replace))
+        {
+          g_assert (crtc_mode != output->preferred_mode);
+          meta_monitor_mode_free (mode);
+          continue;
+        }
+
       if (crtc_mode == output->preferred_mode)
         monitor_priv->preferred_mode = mode;
       if (output->crtc && crtc_mode == output->crtc->current_mode)
         monitor_priv->current_mode = mode;
-
-      if (!meta_monitor_add_mode (monitor, mode))
-        meta_monitor_mode_free (mode);
     }
 }
 
@@ -825,7 +848,7 @@ generate_tiled_monitor_modes (MetaMonitorTiled *monitor_tiled)
 
       tiled_modes = g_list_remove_link (tiled_modes, l);
 
-      if (!meta_monitor_add_mode (monitor, mode))
+      if (!meta_monitor_add_mode (monitor, mode, FALSE))
         {
           meta_monitor_mode_free (mode);
           continue;
@@ -967,7 +990,7 @@ generate_untiled_monitor_modes (MetaMonitorTiled *monitor_tiled)
       if (!mode)
         continue;
 
-      if (!meta_monitor_add_mode (monitor, mode))
+      if (!meta_monitor_add_mode (monitor, mode, FALSE))
         {
           meta_monitor_mode_free (mode);
           continue;
-- 
2.14.1

