From: Benjamin Berg <bberg@redhat.com>
Date: Wed, 6 Mar 2019 14:07:02 +0100
Subject: keybindings: Fix theoretical memory leak while ungrabbing

In the unlikely event that one tries to ungrab an action which does not
exist, a small leak could occur. Fix this by using g_autofree.

https://gitlab.gnome.org/GNOME/mutter/merge_requests/478

Origin: upstream, commit:0ceeb28481ec74073241d0c2f6af8795f070905
Applied-Upstream: 3.32.1
---
 src/core/keybindings.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/core/keybindings.c b/src/core/keybindings.c
index 5ffe411..478d4d8 100644
--- a/src/core/keybindings.c
+++ b/src/core/keybindings.c
@@ -1654,7 +1654,7 @@ meta_display_ungrab_accelerator (MetaDisplay *display,
   MetaKeyBindingManager *keys = &display->key_binding_manager;
   MetaKeyBinding *binding;
   MetaKeyGrab *grab;
-  char *key;
+  g_autofree char *key = NULL;
   MetaResolvedKeyCombo resolved_combo = { NULL, 0 };
 
   g_return_val_if_fail (action != META_KEYBINDING_ACTION_NONE, FALSE);
@@ -1683,7 +1683,6 @@ meta_display_ungrab_accelerator (MetaDisplay *display,
     }
 
   g_hash_table_remove (external_grabs, key);
-  g_free (key);
   resolved_key_combo_reset (&resolved_combo);
 
   return TRUE;
