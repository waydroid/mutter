From: =?utf-8?q?Florian_M=C3=BCllner?= <fmuellner@gnome.org>
Date: Wed, 6 Mar 2019 18:50:33 +0100
Subject: cogl: Introspect CoglTexture2D(Sliced)

gnome-shell cannot use CoglTexture if gjs can't tell that an object
in question implements the CoglTexture interface.

https://gitlab.gnome.org/GNOME/gnome-shell/issues/1020
https://gitlab.gnome.org/GNOME/mutter/merge_requests/482

Origin: upstream, commit:aca31c81494435a6c3f2266b664bfc727a23fbe
Applied-Upstream: 3.32.1
---
 cogl/cogl/cogl-texture-2d-sliced.h |  6 +++---
 cogl/cogl/cogl-texture-2d.h        | 12 +++++++++---
 cogl/cogl/meson.build              |  4 ++--
 3 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/cogl/cogl/cogl-texture-2d-sliced.h b/cogl/cogl/cogl-texture-2d-sliced.h
index 8d43fc5..12ce710 100644
--- a/cogl/cogl/cogl-texture-2d-sliced.h
+++ b/cogl/cogl/cogl-texture-2d-sliced.h
@@ -78,7 +78,7 @@ typedef struct _CoglTexture2DSliced CoglTexture2DSliced;
 GType cogl_texture_2d_sliced_get_gtype (void);
 
 /**
- * cogl_texture_2d_sliced_new_with_size:
+ * cogl_texture_2d_sliced_new_with_size: (skip)
  * @ctx: A #CoglContext
  * @width: The virtual width of your sliced texture.
  * @height: The virtual height of your sliced texture.
@@ -125,7 +125,7 @@ cogl_texture_2d_sliced_new_with_size (CoglContext *ctx,
                                       int max_waste);
 
 /**
- * cogl_texture_2d_sliced_new_from_file:
+ * cogl_texture_2d_sliced_new_from_file: (skip)
  * @ctx: A #CoglContext
  * @filename: the file to load
  * @max_waste: The threshold of how wide a strip of wasted texels
@@ -173,7 +173,7 @@ cogl_texture_2d_sliced_new_from_file (CoglContext *ctx,
                                       CoglError **error);
 
 /**
- * cogl_texture_2d_sliced_new_from_data:
+ * cogl_texture_2d_sliced_new_from_data: (skip)
  * @ctx: A #CoglContext
  * @width: width of texture in pixels
  * @height: height of texture in pixels
diff --git a/cogl/cogl/cogl-texture-2d.h b/cogl/cogl/cogl-texture-2d.h
index 85cadba..29b8b2d 100644
--- a/cogl/cogl/cogl-texture-2d.h
+++ b/cogl/cogl/cogl-texture-2d.h
@@ -86,7 +86,7 @@ gboolean
 cogl_is_texture_2d (void *object);
 
 /**
- * cogl_texture_2d_new_with_size:
+ * cogl_texture_2d_new_with_size: (skip)
  * @ctx: A #CoglContext
  * @width: Width of the texture to allocate
  * @height: Height of the texture to allocate
@@ -120,7 +120,7 @@ cogl_texture_2d_new_with_size (CoglContext *ctx,
                                int height);
 
 /**
- * cogl_texture_2d_new_from_file:
+ * cogl_texture_2d_new_from_file: (skip)
  * @ctx: A #CoglContext
  * @filename: the file to load
  * @error: A #CoglError to catch exceptional errors or %NULL
@@ -154,7 +154,7 @@ cogl_texture_2d_new_from_file (CoglContext *ctx,
                                CoglError **error);
 
 /**
- * cogl_texture_2d_new_from_data:
+ * cogl_texture_2d_new_from_data: (skip)
  * @ctx: A #CoglContext
  * @width: width of texture in pixels
  * @height: height of texture in pixels
@@ -231,6 +231,9 @@ cogl_texture_2d_new_from_data (CoglContext *ctx,
 CoglTexture2D *
 cogl_texture_2d_new_from_bitmap (CoglBitmap *bitmap);
 
+/**
+ * cogl_egl_texture_2d_new_from_image: (skip)
+ */
 #if defined (COGL_HAS_EGL_SUPPORT) && defined (EGL_KHR_image_base)
 /* NB: The reason we require the width, height and format to be passed
  * even though they may seem redundant is because GLES 1/2 don't
@@ -247,6 +250,9 @@ typedef gboolean (*CoglTexture2DEGLImageExternalAlloc) (CoglTexture2D *tex_2d,
                                                         gpointer user_data,
                                                         GError **error);
 
+/**
+ * cogl_texture_2d_new_from_egl_image_external: (skip)
+ */
 CoglTexture2D *
 cogl_texture_2d_new_from_egl_image_external (CoglContext *ctx,
                                              int width,
diff --git a/cogl/cogl/meson.build b/cogl/cogl/meson.build
index 5d80e87..626e8fa 100644
--- a/cogl/cogl/meson.build
+++ b/cogl/cogl/meson.build
@@ -89,6 +89,8 @@ cogl_headers = [
   'cogl-pipeline-layer-state.h',
   'cogl-primitives.h',
   'cogl-texture.h',
+  'cogl-texture-2d.h',
+  'cogl-texture-2d-sliced.h',
   'cogl-types.h',
   'cogl.h',
 ]
@@ -117,10 +119,8 @@ cogl_nonintrospected_headers = [
   'cogl-matrix-stack.h',
   'cogl-poll.h',
   'cogl-texture-3d.h',
-  'cogl-texture-2d.h',
   'cogl-texture-2d-gl.h',
   'cogl-texture-rectangle.h',
-  'cogl-texture-2d-sliced.h',
   'cogl-sub-texture.h',
   'cogl-atlas-texture.h',
   'cogl-meta-texture.h',
